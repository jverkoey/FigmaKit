<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Diffs</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>import Config
import CoreText
import FigmaKit
import Foundation
import PlaygroundSupport
import UIKit

PlaygroundPage.current.needsIndefiniteExecution = true
//
//let url = URL(string: "http://fonts.gstatic.com/s/sourcesanspro/v18/6xK3dSBYKcSV-LCoeQqfX1RYOo3aP6TkmDZz9g.ttf")!
//let task = URLSession.shared.dataTask(with: url) {(data, response, error) in
//    guard let data = data else { return }
//    let ttfPath = getDocumentsDirectory().appendingPathComponent("font.ttf")
//    try! data.write(to: ttfPath)
//    let success = CTFontManagerRegisterFontsForURL(ttfPath as CFURL, .process, nil)
//}
//task.resume()


// iOS 15 UIKit: https://www.figma.com/file/3FBkUQ7O1jmi6FPKLDq6DQ/iOS-15-UI-Kit-for-Figma-Community
// https://www.figma.com/file/hiWinpPs2BDJabFyIB4W2n/Untitled
let url = URL(string: "https://api.figma.com/v1/files/lUfHc6IcPjXVgVVVWjDgpx?geometry=paths")!
var request = URLRequest(url: url)
request.addValue(Config.figmaToken, forHTTPHeaderField: "X-FIGMA-TOKEN")
var config = URLSessionConfiguration.default
config.requestCachePolicy = .returnCacheDataElseLoad
let session = URLSession(configuration: config)
print("Fetching file...")
let task = session.dataTask(with: request) { data, response, error in
    print("Data retreived, decoding...")
    guard let data = data else {
        return
    }
    let jsonDecoder = JSONDecoder()
    do {
        let file = try jsonDecoder.decode(FigmaKit.File.self, from: data)
        print(file.name)
    } catch let error {
        print(error)
    }
}
task.resume()
</string>
			<key>ModifiedRange</key>
			<string>{0, 1536}</string>
			<key>OriginalContent</key>
			<string></string>
			<key>OriginalRange</key>
			<string>{0, 0}</string>
		</dict>
	</array>
	<key>FormatVersion</key>
	<integer>2</integer>
</dict>
</plist>
