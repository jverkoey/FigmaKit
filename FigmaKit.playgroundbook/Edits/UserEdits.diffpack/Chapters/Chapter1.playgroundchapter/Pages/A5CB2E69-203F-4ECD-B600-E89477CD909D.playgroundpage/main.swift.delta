<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>BaseFile</key>
	<string>Chapters/Chapter1.playgroundchapter/Pages/Template.playgroundpage/main.swift</string>
	<key>Diffs</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>import FigmaKit
import Foundation
import PlaygroundSupport
import UIKit

let json = """
            {"path":"M32.0607 1.06066C32.6464 0.474874 32.6464 -0.474874 32.0607 -1.06066L22.5147 -10.6066C21.9289 -11.1924 20.9792 -11.1924 20.3934 -10.6066C19.8076 -10.0208 19.8076 -9.07107 20.3934 -8.48528L28.8787 0L20.3934 8.48528C19.8076 9.07107 19.8076 10.0208 20.3934 10.6066C20.9792 11.1924 21.9289 11.1924 22.5147 10.6066L32.0607 1.06066ZM0 1.5L31 1.5L31 -1.5L0 -1.5L0 1.5Z","windingRule":"NONZERO"}
            """.data(using: .utf8)!
let decoder = JSONDecoder()
let pathDescription = try decoder.decode(Path.self, from: json)

let bounds = pathDescription.bounds()!
let commands = pathDescription.commands(offsetBy: (x: -bounds.minX, y: -bounds.minY))
print(commands)

let shapeLayer = CAShapeLayer()
shapeLayer.fillColor = UIColor.black.cgColor
switch pathDescription.windingRule {
case .evenOdd:
    shapeLayer.fillRule = .evenOdd
case .nonZero:
    shapeLayer.fillRule = .nonZero
case .none:
    break
}

var path = CGMutablePath()
for command in commands {
    switch command {
    case let .moveTo(x, y):
        path.move(to: CGPoint(x: x, y: y))
    case let .lineTo(x, y):
        path.addLine(to: CGPoint(x: x, y: y))
    case let .splineTo(x0, y0, x1, y1, x, y):
        path.addCurve(to: CGPoint(x: x, y: y),
                      control1: CGPoint(x: x0, y: y0),
                      control2: CGPoint(x: x1, y: y1))
    case .close:
        path.closeSubpath()
    }
}
shapeLayer.path = path

let frame = CGRect(origin: .zero, size: .init(width: 1125, height: 2436))
shapeLayer.frame = frame
let view = UIView(frame: frame)
view.layer.addSublayer(shapeLayer)
PlaygroundPage.current.liveView = view
</string>
			<key>ModifiedRange</key>
			<string>{0, 1711}</string>
			<key>OriginalContent</key>
			<string></string>
			<key>OriginalRange</key>
			<string>{0, 0}</string>
		</dict>
	</array>
	<key>FormatVersion</key>
	<integer>2</integer>
</dict>
</plist>
